module Window_demo
    enums
        Directions :: { DTop, DLeft, DBottom, DRight }.
    sorts
        Rectangles :: Universe
            attributes
                Width : Integers
                Height : Integers.
    statics
        Opposite_Direction : Directions -> Directions.
        Snapping_Threshold : Integers
    fluents
        basic
            Grouped_With : Rectangles x Rectangles -> Booleans
            Moving : Rectangles -> Booleans
        defined
            output Side : Rectangles x Directions -> Booleans.
            Distance : Rectangles x Rectangles x Integers -> Booleans
    axioms
        Snapping_Threshold = 30

        Opposite_Direction(a) = b if
            Opposite_Direction(b) = a.
        
        Opposite_Direction(DLeft) = DRight.
        
        Distance(a, b, min_d) if
            Instance(a, Rectangles),
            Instance(b, Rectangles),
            -Overlaps(a, b),
            Opposite_Direction(dir) = dir',
            #ddlog var min_d = Aggregate((a, b), group_min(b)).
        
        Moving(other) = false if
            Instance(other, Rectangles),
            -Grouped_With(other, _).


